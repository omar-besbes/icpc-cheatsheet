name: Build and deploy cheat sheet

on:
  push:
    branches:
      - main # Trigger on push to the main branch
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install g++
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ cmake ninja-build

      - name: Configure CMake
        run: cmake --preset default

      - name: Build project
        run: cmake --build --preset default

      - name: Test project
        run: ctest --preset default

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install TeX Live
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive texlive-latex-extra texlive-fonts-recommended texlive-science

      - name: Compile LaTeX to PDF
        run: |
          pdflatex -jobname=cheatsheet template.tex
          pdflatex -jobname=cheatsheet template.tex

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: cheatsheet-${{ github.event.pull_request.number }}
          include-hidden-files: true
          path: cheatsheet.pdf

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: netlify
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    steps:
      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: cheatsheet-${{ github.event.pull_request.number }}
          path: .build

      - name: Setup Netlify CLI
        run: npm install netlify-cli --save-dev

      - name: Deploy PDF to Netlify (main)
        if: github.ref == 'refs/heads/main'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: netlify deploy --prod --dir .build

      - name: Deploy PDF to Netlify (preview)
        if: github.event_name == 'pull_request'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          echo "/ /cheatsheet.pdf 200" > .build/_redirects
          netlify deploy \
            --dir .build \
            --message="Deploy preview for PR \#${{ github.event.pull_request.number }}" \
            --alias="preview-${{ github.event.pull_request.number }}"
