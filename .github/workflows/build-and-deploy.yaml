name: Build and deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these deployments to complete.
concurrency:
  group: "netlify"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install TeX Live
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive texlive-latex-extra texlive-fonts-recommended texlive-science

      - name: Compile LaTeX to PDF
        run: |
          pdflatex -jobname=cheatsheet template.tex
          pdflatex -jobname=cheatsheet template.tex

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: cheatsheet-${{ github.sha }}
          include-hidden-files: true
          path: cheatsheet.pdf

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: netlify
      url: ${{ steps.deploy.outputs.deploy_url }}
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    steps:
      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: cheatsheet-${{ github.sha }}
          path: .build

      - name: Setup Netlify CLI
        run: npm install netlify-cli --save-dev

      - name: Deploy PDF to Netlify
        id: deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          echo "/ /cheatsheet.pdf 200" > .build/_redirects

          deploy_url=""
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            netlify deploy \
              --dir .build \
              --message="Deploy preview for PR #${{ github.event.pull_request.number }}" \
              --alias="preview-${{ github.sha }}" | \
              tee cmd.log
            deploy_url=$(grep 'Website draft URL:' cmd.log | awk '{print $NF}')
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            netlify deploy \
              --dir .build \
              --message="Deploy (main branch)" \
              --prod | \
              tee cmd.log
            deploy_url=$(grep 'Unique deploy URL:' cmd.log | awk '{print $NF}')
          fi

          echo "deploy_url=$deploy_url" >> "$GITHUB_OUTPUT"
